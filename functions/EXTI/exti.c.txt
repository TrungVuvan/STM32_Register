#include "stm32f103_gpio.h"
#include "stm32f103_spi.h"

void Delay_Timer2_Config(void);
void delay_ms(uint32_t time);
void EXTI0_IRQHandler(void);


int main(void)
{
	// khai bao bien
	GPIO_PinConfig_t pA, pC;
	GPIO_Handle_t led, it;
	

	pA.GPIO_ITMode = IT_MODE_FT; // ngat suon xuong
	pA.GPIO_PinNumber = 0;       // ngat line 0
	pA.GPIO_PinMode = 0;				 // mode input pullup/pulldown
	pA.GPIO_PinCNF = 2;
	it.GPIO_PinConfig = pA;
	it.pGPIOx = GPIOA;					 // chon chan A0 lam chan ngat
	GPIO_PeriCLKControl(GPIOA, ENABLE); // enable clock GPIOA
	GPIO_Init(&it);					//khoi tao GPIO
	GPIO_Init_EXTI(&it);			// khoi tao ngat ngoai
	GPIO_EXTI_Enable(6, ENABLE);		// enable ngat
	
	// configure pin PC13 as output, push/pull
	pC.GPIO_PinNumber = 13;
	pC.GPIO_PinMode = 3;
	pC.GPIO_PinCNF = 0;
	led.GPIO_PinConfig = pC;
	led.pGPIOx = GPIOC;
	GPIO_PeriCLKControl(GPIOC, ENABLE);
	GPIO_Init(&led);
	GPIO_WriteToOutputPin(GPIOC, 13, RESET);  // reset pin PC13
	Delay_Timer2_Config();
    while(1)
    {
				GPIO_ToggleOutputPin(GPIOC, 13);
				delay_ms(1000);
				//GPIO_ToggleOutputPin(GPIOC, 13);
				
    }
    return 0;
}

void Delay_Timer2_Config(void)
{
	RCC ->APB1ENR |= (1 << 0);    // enable clock for timer2
	TIM2 ->ARR = 0xFFFF;      // TIMx auto-reload register TIMx_ARR
	TIM2 ->PSC = 72 - 1;      // PSC[15:0]: prescaler value
	TIM2 ->CR1 = 0x01;        // bit 0 CEN: counter enable and 0: counter used as upcounter
	TIM2 ->EGR = 0x01;        // generate an update event to reload the Prescaler and repetition counter value immediately
}

void delay_ms(uint32_t time)
{
	while(time)
	{
		TIM2 ->CNT = 0U;
		while((TIM2 ->CNT) < 1000);
		time--;
	}
}


void EXTI0_IRQHandler(void)
{
	if(EXTI ->PR & (1 << 0))   
	{
		EXTI ->PR |= (1 << 0); // xoa co pending bang cach ghi 1 vao
		GPIOC ->ODR ^= 0xFFFF;
	}
}
